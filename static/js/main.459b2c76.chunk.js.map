{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["data","convertedData","duplicate","Input","getOperation","e","equation","target","innerHTML","document","getElementById","value","onClick","block","className","variant","Component","App","props","handleChange","charAt","length","slice","count","handleSubmit","preventDefault","i","result","eval","undefined","addButton","state","inputList","bind","this","setState","concat","style","marginTop","marginBottom","onSubmit","Group","Label","Control","id","placeholder","onChange","Text","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.459b2c76.chunk.js","sourcesContent":["import './App.css';\nimport {Container, Col, Form, Button} from 'react-bootstrap';\nimport { Component } from 'react';\n\nlet data;\nlet convertedData;\nlet duplicate;\n\nclass Input extends Component {\n\trender() {\n  \treturn <Button onClick={(e) => this.getOperation(e)} block className=\"btn-lg\" variant=\"outline-primary\">{convertedData}</Button>;\n  }\n  \n  getOperation = (e) => {\n    let equation = e.target.innerHTML;\n    document.getElementById('form').value = equation;\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {inputList: []};\n    this.addButton = this.addButton.bind(this);\n  }\n\n  addButton() {\n    const inputList = this.state.inputList;\n    this.setState({\n        inputList: inputList.concat(<Input key={inputList.length} />)\n    });\n  }\n\n  handleChange = (e) => {\n    data = e.target.value;\n    let lastValue = data.charAt(data.length-1);\n    if(lastValue === '=') {\n      data = data.slice(0, -1);\n      this.count();\n    }  \n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.count();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Container style={{marginTop: 100, marginBottom: 50}}>\n            <Col>\n              <Form style={{marginBottom: 50}} onSubmit={this.handleSubmit}>\n                <Form.Group>\n                  <Form.Label>Calculator</Form.Label>\n                  <Form.Control className=\"form-control form-control-lg\" id=\"form\" placeholder=\"0123456789 . + - * / ( ) =\" onChange={this.handleChange} /> \n                  <Form.Text className=\"text-muted\">Only recognises the above characters</Form.Text>\n                </Form.Group>\n              </Form>\n              {this.state.inputList}\n            </Col>\n          </Container>\n        </header>\n      </div>\n    );\n  }\n\n  count = () => {\n    convertedData = '';\n    for(let i = 0; i < data.length; i++) {\n      switch(data[i]) {\n        case '0':\n          convertedData += '0';\n          break;\n        case '1':\n          convertedData += '1';\n          break;\n        case '2':\n          convertedData += '2';\n          break;\n        case '3':\n          convertedData += '3';\n          break;\n        case '4':\n          convertedData += '4';\n          break;\n        case '5':\n          convertedData += '5';\n          break;\n        case '6':\n          convertedData += '6';\n          break;\n        case '7':\n          convertedData += '7';\n          break;\n        case '8':\n          convertedData += '8';\n          break;\n        case '9':\n          convertedData += '9';\n          break;\n        case '.':\n          convertedData += '.';\n          break;\n        case '+':\n          convertedData += '+';\n          break;\n        case '-':\n          convertedData += '-';\n          break;\n        case '*':\n          convertedData += '*';\n          break;\n        case '/':\n          convertedData += '/';\n          break;\n        case '(':\n          convertedData += '(';\n          break;\n        case ')':\n          convertedData += ')';\n          break;\n        default:\n      }\n    }\n    let result;\n    try{\n      result = eval(convertedData);\n    } catch {\n      result = 'Error';\n    }\n    if(result === undefined) result = '';\n    document.getElementById('form').value = result;\n    if(duplicate !== result && result !== 'Error' && result !== '') this.addButton();\n    duplicate = result;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}